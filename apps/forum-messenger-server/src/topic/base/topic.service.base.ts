/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Topic as PrismaTopic } from "@prisma/client";

export class TopicServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TopicCountArgs, "select">): Promise<number> {
    return this.prisma.topic.count(args);
  }

  async topics(args: Prisma.TopicFindManyArgs): Promise<PrismaTopic[]> {
    return this.prisma.topic.findMany(args);
  }
  async topic(args: Prisma.TopicFindUniqueArgs): Promise<PrismaTopic | null> {
    return this.prisma.topic.findUnique(args);
  }
  async createTopic(args: Prisma.TopicCreateArgs): Promise<PrismaTopic> {
    return this.prisma.topic.create(args);
  }
  async updateTopic(args: Prisma.TopicUpdateArgs): Promise<PrismaTopic> {
    return this.prisma.topic.update(args);
  }
  async deleteTopic(args: Prisma.TopicDeleteArgs): Promise<PrismaTopic> {
    return this.prisma.topic.delete(args);
  }
}
